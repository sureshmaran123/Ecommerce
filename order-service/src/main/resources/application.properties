spring.application.name=order-service
server.port=8082


spring.datasource.url=jdbc:mysql://localhost:3306/order_db
spring.datasource.username=root
spring.datasource.password=Sureshkumar@3
spring.jpa.hibernate.ddl-auto=update



# Resilience4j Retry Configuration
spring.main.web-application-type=reactive
resilience4j.retry.instances.inventoryService.enableExponentialBackoff=true
resilience4j.retry.instances.inventoryService.exponentialBackoffMultiplier=2
resilience4j.retry.instances.inventoryService.retryExceptions=org.springframework.web.client.HttpServerErrorException,java.io.IOException


# Kafka Topics
kafka.topic.order-topic=order-topic
kafka.topic.inventory-topic=inventory-topic
# Inventory Service URL





# Scheduled Task Configuration

spring.kafka.consumer.key-serializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-serializer=org.springframework.kafka.support.serializer.JsonDeserializer






inventory.service.url=http://localhost:8083

# Circuit Breaker configuration
resilience4j.circuitbreaker.instances.inventoryService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventoryService.slidingWindowSize=100
resilience4j.circuitbreaker.instances.inventoryService.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.inventoryService.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventoryService.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.inventoryService.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventoryService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventoryService.eventConsumerBufferSize=10

# Retry configuration
resilience4j.retry.instances.inventoryService.maxAttempts=3
resilience4j.retry.instances.inventoryService.waitDuration=1s

# Actuator endpoints for monitoring
management.endpoints.web.exposure.include=health,info,metrics,circuitbreakers,retries
management.health.circuitbreakers.enabled=true
management.health.retries.enabled=true

# Logging configuration
logging.level.root=INFO
logging.level.com.ecommerce.order_service=DEBUG

# Scheduled task configuration
order.processing.interval=30000



spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=order-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
