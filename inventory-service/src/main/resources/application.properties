spring.application.name=inventory-service
server.port=8083


spring.datasource.url=jdbc:mysql://localhost:3306/inventory_db
spring.datasource.username=root
spring.datasource.password=Sureshkumar@3
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.main.web-application-type=reactive
logging.level.org.springframework.web=DEBUG
spring.main.allow-bean-definition-overriding=true



# Kafka configuration
ring.kafka.bootstrap-servers=localhost:9092


# Eureka configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true






spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=com.ecommerce.inventory_service.service.InventoryUpdateRequest
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Consumer Configuration
spring.kafka.consumer.properties.spring.kafka.consumer.value.default.type=com.ecommerce.inventory_service.model.OrderRequest



# Optional Kafka Listener Configuration
# Adjust the concurrency according to your application's needs
spring.kafka.listener.concurrency=3

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=inventory-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
